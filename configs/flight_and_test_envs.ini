[fsw_common]
lib_deps = 
lib_extra_dirs = lib/fsw
src_filter = +<common/> -<common/targets> +<fsw/FCCode/> +<flow_data.cpp> +<eeprom_configs.cpp>

#########################################################################
# Common compiler options for a Teensy target.
#########################################################################
[fsw_teensy_common]
extends = teensy
lib_extra_dirs = ${fsw_common.lib_extra_dirs}
lib_deps = ${fsw_common.lib_deps}
src_filter = ${fsw_common.src_filter} +<fsw/targets/teensy.cpp>
test_build_project_src = true

#########################################################################
# CLI Targets can be directly uploaded to a Teensy via a USB cable. 
#########################################################################
[fsw_teensy35]
extends = fsw_teensy_common
board = teensy35

[fsw_teensy36]
extends = fsw_teensy_common
board = teensy36

[fsw_teensy_hitl]
build_flags = ${fsw_teensy_common.build_flags} -D FUNCTIONAL_TEST

[env:fsw_teensy35_hitl_leader]
extends = fsw_teensy35
build_flags = ${fsw_teensy_hitl.build_flags} ${leader.build_flags}

[env:fsw_teensy35_hitl_follower]
extends = fsw_teensy35
build_flags = ${fsw_teensy_hitl.build_flags} ${follower.build_flags}

[env:fsw_teensy36_hitl_leader]
extends = fsw_teensy36
build_flags = ${fsw_teensy_hitl.build_flags} ${leader.build_flags}

[env:fsw_teensy36_hitl_follower]
extends = fsw_teensy36
build_flags = ${fsw_teensy_hitl.build_flags} ${follower.build_flags}

[fsw_preflight]
extends = fsw_teensy36
src_filter = ${fsw_teensy_common.src_filter} -<fsw/teensy.cpp> +<fsw/preflight_fc.cpp>
build_flags = ${fsw_teensy_common.build_flags} -D FLIGHT

[env:fsw_preflight_leader]
extends = fsw_preflight
build_flags = ${fsw_preflight.build_flags} ${leader.build_flags}

[env:fsw_preflight_follower]
extends = fsw_preflight
build_flags = ${fsw_preflight.build_flags} ${follower.build_flags}

[env:fsw_flight_leader]
extends = fsw_teensy36
build_flags = ${fsw_teensy_common.build_flags} ${leader.build_flags} -D FLIGHT

[env:fsw_flight_follower]
extends = fsw_teensy36
build_flags = ${fsw_teensy_common.build_flags} ${leader.build_flags} -D FLIGHT

#########################################################################
# The native desktop and Teensy CI targets are used for running software-only unit tests.
#########################################################################

[fsw_native_common]
extends  = native
lib_extra_dirs = ${fsw_common.lib_extra_dirs}
lib_deps = ${fsw_common.lib_deps}
lib_archive = false
lib_compat_mode = off
test_build_project_src = true
test_filter = test_fsw_*
test_ignore = test_fsw_EEPROM
build_flags = ${native.build_flags} -D FUNCTIONAL_TEST
src_filter = ${fsw_common.src_filter} -<fsw/FCCode/main.cpp>

; This target is used for debugging and testing purposes.
; - Can be debugged
; - Can run unit tests with it
; - Generates code coverage
[env:fsw_native_ci]
extends = fsw_native_common
build_flags = ${fsw_native_common.build_flags} ${native_ci.build_flags} ${leader.build_flags}
extra_scripts =
  ${all.extra_scripts}
  get_code_coverage.py
src_filter = ${fsw_native_common.src_filter} +<fsw/targets/native_dummy.cpp>

; This model of flight software is to be used in conjunction with psim.
[env:fsw_native_leader]
extends = fsw_native_common
build_flags = ${fsw_native_common.build_flags} ${native_release.build_flags} ${leader.build_flags}
src_filter = ${fsw_native_common.src_filter} +<fsw/targets/native.cpp>

[env:fsw_native_follower]
extends = fsw_native_common
build_flags = ${fsw_native_common.build_flags} ${native_release.build_flags} ${follower.build_flags}
src_filter = ${fsw_native_common.src_filter} +<fsw/targets/native.cpp>

; This environment is used by the CI tool to run software unit tests on Teensy.
; It may also be used manually.
[fsw_teensy_ci_common]
extends = fsw_teensy_common
build_flags = ${fsw_teensy_common.build_flags} -D FUNCTIONAL_TEST
  -fno-strict-aliasing # Prevent bitstream unit testing errors
src_filter = ${fsw_teensy_common.src_filter} -<fsw/targets/teensy.cpp> +<fsw/targets/teensy_stub.cpp>
test_filter = test_fsw_*

[env:fsw_teensy35_ci_leader]
extends = fsw_teensy_ci_common
build_flags = ${fsw_teensy_ci_common.build_flags} ${leader.build_flags}
board = teensy35

[env:fsw_teensy35_ci_follower]
extends = fsw_teensy_ci_common
build_flags = ${fsw_teensy_ci_common.build_flags} ${follower.build_flags}
board = teensy35

[env:fsw_teensy36_ci_leader]
extends = fsw_teensy_ci_common
build_flags = ${fsw_teensy_ci_common.build_flags} ${leader.build_flags}
board = teensy36

[env:fsw_teensy36_ci_follower]
extends = fsw_teensy_ci_common
build_flags = ${fsw_teensy_ci_common.build_flags} ${follower.build_flags}
board = teensy36
