#########################################################################
# Targets for ground software.
#########################################################################

[fsw_ground_common]
platform = native
lib_deps =
  CommonSoftware/
lib_archive = false
lib_compat_mode = off
test_build_project_src = true
build_flags = -std=c++14 -Werror -Wall -D GSW -D FLIGHT
    -D UNITY_INCLUDE_DOUBLE -D DESKTOP -lpthread -D PAN_LEADER
lib_extra_dirs = lib/fsw
src_filter = +<fsw/FCCode/> +<fsw/GroundCode> +<fsw/flow_data.cpp>

[fsw_downlink_parser_common]
extends = fsw_ground_common
src_filter = ${fsw_ground_common.src_filter} +<fsw/GroundTargets/downlink_parser.cpp>
test_filter = test_gsw_downlink_parser

[env:fsw_downlink_parser]
extends = fsw_downlink_parser_common
build_flags = ${fsw_ground_common.build_flags} -O3

[env:fsw_downlink_parser_ci]
extends = fsw_downlink_parser_common
build_flags = ${fsw_ground_common.build_flags} -O0 -g --coverage -D CI
extra_scripts = get_code_coverage.py

[env:fsw_uplink_producer]
extends = fsw_ground_common
src_filter = ${fsw_ground_common.src_filter} +<fsw/GroundTargets/uplink_producer.cpp>
test_filter = test_gsw_uplink_producer

[env:fsw_telem_info_generator]
extends = fsw_ground_common
build_flags = ${fsw_ground_common.build_flags} -O3
src_filter = ${fsw_ground_common.src_filter} +<fsw/GroundTargets/telem_info_generator.cpp>
test_ignore = *
