#########################################################################
# Targets for ground software.
#########################################################################

[gsw_common]
extends = native
lib_archive = false
lib_extra_dirs =
  ${native.lib_extra_dirs}
  lib/fsw
lib_compat_mode = off
test_build_project_src = true
build_flags = ${native.build_flags} ${leader.build_flags} -D GSW -D FLIGHT
src_filter = +<fsw/FCCode> +<gsw/parsers/src> +<common> -<common/targets/> -<gsw/venv> +<flow_data.cpp>
extra_scripts = 
  tools/constant_reporter.py
  src/flow_data_generator.py

[gsw_downlink_parser_common]
extends = gsw_common
src_filter = ${gsw_common.src_filter} +<gsw/parsers/targets/downlink_parser.cpp>
test_filter = test_gsw_downlink_parser

[env:gsw_downlink_parser]
extends = gsw_downlink_parser_common
build_flags = ${gsw_common.build_flags} ${native_release.build_flags}

[env:gsw_downlink_parser_ci]
extends = gsw_downlink_parser_common
build_flags = ${gsw_common.build_flags} ${native_ci.build_flags}
extra_scripts =
  ${gsw_common.extra_scripts}
  set_coverage_flag.py

[env:gsw_uplink_producer]
extends = gsw_common
build_flags = ${gsw_common.build_flags} ${native_release.build_flags}
src_filter = ${gsw_common.src_filter} +<gsw/parsers/targets/uplink_producer.cpp>
test_filter = test_gsw_uplink_producer

[env:gsw_telem_info_generator]
extends = gsw_common
build_flags = ${gsw_common.build_flags} ${native_release.build_flags}
src_filter = ${gsw_common.src_filter} +<gsw/parsers/targets/telem_info_generator.cpp>
test_ignore = *
