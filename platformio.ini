[platformio]
extra_configs = hardware_test_envs.ini

#########################################################################
# Common compiler options for a Teensy target.
#########################################################################
[teensy_common]
platform = teensy
framework = arduino
lib_deps =
  https://github.com/pathfinder-for-autonomous-navigation/psim
  https://github.com/pathfinder-for-autonomous-navigation/CommonSoftware
  ;file:///Users/athena/PAN_2019/CommonSoftware
  https://github.com/nox771/i2c_t3
build_flags = -std=c++14 -Werror -Wall -D UNITY_INCLUDE_DOUBLE -O3 -D NDEBUG -DLIN_RANDOM_SEED=358264 
  -D SERIAL4_RX_BUFFER_SIZE=1024 -fno-rtti
src_filter = +<FCCode/> +<teensy.cpp> +<flow_data.cpp>
upload_protocol = teensy-cli
test_build_project_src = true

#########################################################################
# CLI Targets can be directly uploaded to a Teensy via a USB cable. 
#########################################################################
[teensy35]
extends = teensy_common
board = teensy35

[teensy36]
extends = teensy_common
board = teensy36

[teensy_hootl]
build_flags = ${teensy_common.build_flags} -D HOOTL

[env:teensy35_hootl]
extends = teensy35
build_flags = ${teensy_hootl.build_flags} -D PAN_LEADER

[env:teensy36_hootl]
extends = teensy36
build_flags = ${teensy_hootl.build_flags} -D PAN_LEADER

[env:preflight]
extends = teensy36
src_filter = ${teensy_common.src_filter} -<teensy.cpp> +<preflight_fc.cpp>
build_flags = ${teensy_common.build_flags} -D FLIGHT -D PAN_LEADER

[env:flight]
extends = teensy36
build_flags = ${teensy_common.build_flags} -D FLIGHT -D PAN_LEADER

#########################################################################
# The native desktop and Teensy CI targets are used for running software-only unit tests.
#########################################################################

[native_common]
platform = native
lib_deps =
  https://github.com/pathfinder-for-autonomous-navigation/psim
  https://github.com/pathfinder-for-autonomous-navigation/CommonSoftware
  ;file:///Users/athena/PAN_2019/CommonSoftware
lib_archive = false
lib_compat_mode = off
test_build_project_src = true
test_filter = test_fsw_*
build_flags = -std=c++14 -Werror -Wall -D HOOTL -D UNITY_INCLUDE_DOUBLE -D DESKTOP -lpthread

; This target is used for debugging and testing purposes.
; - Can be debugged
; - Can run unit tests with it
; - Generates code coverage
[env:native_ci]
extends = native_common
build_flags = ${native_common.build_flags} -O0 -g --coverage -D CI
extra_scripts = get_code_coverage.py
src_filter = +<FCCode/> -<FCCode/main.cpp> +<native_dummy.cpp> +<flow_data.cpp>

; This model of flight software is to be used in conjunction with psim.
[env:native]
extends = native_common
build_flags = ${native_common.build_flags} -g #-O3
src_filter = +<FCCode/> -<FCCode/main.cpp> +<native.cpp> +<flow_data.cpp>

; This environment is used by the CI tool to run software unit tests on Teensy.
; It may also be used manually.
[env:teensy_ci]
board = teensy35
platform = ${teensy_cli.platform}
framework = ${teensy_cli.framework}
lib_deps = ${teensy_cli.lib_deps}
build_flags = ${teensy_cli.build_flags} -D HOOTL -D UNITY_INCLUDE_DOUBLE
src_filter = +<teensy_stub.cpp> +<flow_data.cpp>
upload_protocol = teensy-cli
test_filter = test_fsw_*
